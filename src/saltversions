#!/usr/bin/env python3

"""
saltversions fetches version numbers from OBS repositories.
"""

__author__ = "Jochen Breuer"
__email__ = "jbreuer@suse.de"
__license__ = "MIT"

from os import environ
from concurrent.futures import ThreadPoolExecutor as PoolExecutor

import requests
from pyrpm.spec import Spec


repos = (
    "systemsmanagement:saltstack:products",
    "systemsmanagement:saltstack:products:testing",
    "systemsmanagement:saltstack:products:next",
    "systemsmanagement:saltstack:products:next:testing",
    "openSUSE:Factory",
)


class bcolors:
    HEADER = "\033[95m"
    OKBLUE = "\033[94m"
    OKGREEN = "\033[92m"
    WARNING = "\033[93m"
    FAIL = "\033[91m"
    ENDC = "\033[0m"
    BOLD = "\033[1m"
    UNDERLINE = "\033[4m"


def fetch(repo):
    """
    Fetching the spec file from a repository.
    """
    url = "https://api.opensuse.org/source/{}/salt/salt.spec".format(repo)
    spec_file = requests.get(url, auth=(environ["OSCUSER"],
                                        environ["OSCPASS"]))
    return repo, spec_file

def main():
    with PoolExecutor(max_workers=4) as executor:
        for repo, spec_file in executor.map(fetch, repos):
            if spec_file.status_code == 200:
                spec = Spec.from_string(spec_file.text)
                print("{}{}{}".format(bcolors.HEADER, repo, bcolors.ENDC))
                print("{}{}{}\n".format(bcolors.OKBLUE, spec.version,
                                        bcolors.ENDC))
            else:
                print("{}{}{}".format(bcolors.HEADER, repo, bcolors.ENDC))
                print(
                    "{}{}{}\n".format(
                        bcolors.FAIL, "Error while fetching repo.\n", bcolors.ENDC
                    )
                )


if __name__ == "__main__":
    main()
